{"ast":null,"code":"var _jsxFileName = \"/home/matheus/April Studies/tenisProject/tenisbestchoice/src/Context.js\";\nimport React, { useState } from \"react\";\nimport firebase from \"./utils/Firebase\";\nconst Context = React.createContext();\n\nfunction ContextProvider({\n  children\n}) {\n  // States\n  const [shoes, setShoes] = useState([]);\n  const [searchShoe, setSearchShoe] = useState([]);\n  const [submitedShoe, setSubmitedShoe] = useState([]);\n  const [emailClient, setEmailClient] = useState(''); //\n  // Handle Functions\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setShoes(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }; // Handle Email Value\n\n\n  function onEmailChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setEmailClient({ ...emailClient,\n      [name]: value\n    });\n    console.log(emailClient);\n  }\n\n  const handleSearchChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSearchShoe(prevState => ({ ...prevState,\n      [name]: value\n    }));\n    console.log(searchShoe);\n  };\n\n  function onSubmit(e) {\n    // add items to the DB (admin)\n    e.preventDefault();\n    firebase.firestore().collection('Tenis').add({\n      shoes\n    }).then(() => {\n      setShoes([]);\n    });\n  }\n\n  function searchSubmit(e) {\n    // Add the user search item to the DB\n    e.preventDefault();\n    firebase.firestore().collection('Search').add({\n      searchShoe\n    }).then(() => {\n      setShoes([]);\n    });\n  } // \n  // \n\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      handleChange,\n      onSubmit,\n      searchSubmit,\n      handleSearchChange,\n      onEmailChange,\n      setSubmitedShoe,\n      submitedShoe\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, children);\n}\n\nexport { ContextProvider, Context };","map":{"version":3,"sources":["/home/matheus/April Studies/tenisProject/tenisbestchoice/src/Context.js"],"names":["React","useState","firebase","Context","createContext","ContextProvider","children","shoes","setShoes","searchShoe","setSearchShoe","submitedShoe","setSubmitedShoe","emailClient","setEmailClient","handleChange","e","name","value","target","prevState","onEmailChange","console","log","handleSearchChange","onSubmit","preventDefault","firestore","collection","add","then","searchSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACnC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,EAAD,CAA9C,CALmC,CAMnC;AAGA;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAO;AACxB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAX,IAAAA,QAAQ,CAAEY,SAAD,KAAgB,EACrB,GAAGA,SADkB;AAErB,OAACH,IAAD,GAAQC;AAFa,KAAhB,CAAD,CAAR;AAIH,GAND,CAVmC,CAkBnC;;;AAEA,WAASG,aAAT,CAAuBL,CAAvB,EAA0B;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AAEAL,IAAAA,cAAc,CAAC,EAAC,GAAGD,WAAJ;AAAiB,OAACI,IAAD,GAAQC;AAAzB,KAAD,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ;AACH;;AAED,QAAMW,kBAAkB,GAAIR,CAAD,IAAO;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,aAAa,CAAEU,SAAD,KAAgB,EAC1B,GAAGA,SADuB;AAE1B,OAACH,IAAD,GAAQC;AAFkB,KAAhB,CAAD,CAAb;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACH,GAPD;;AASA,WAASgB,QAAT,CAAkBT,CAAlB,EAAqB;AAAG;AACpBA,IAAAA,CAAC,CAACU,cAAF;AACIxB,IAAAA,QAAQ,CACPyB,SADD,GAECC,UAFD,CAEY,OAFZ,EAGCC,GAHD,CAGK;AAAEtB,MAAAA;AAAF,KAHL,EAICuB,IAJD,CAIM,MAAM;AACRtB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAND;AAOP;;AAED,WAASuB,YAAT,CAAsBf,CAAtB,EAAyB;AAAE;AACvBA,IAAAA,CAAC,CAACU,cAAF;AACAxB,IAAAA,QAAQ,CACHyB,SADL,GAEKC,UAFL,CAEgB,QAFhB,EAGKC,GAHL,CAGS;AAAEpB,MAAAA;AAAF,KAHT,EAIKqB,IAJL,CAIU,MAAM;AACRtB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KANL;AAOH,GAxDkC,CA0DnC;AAEA;;;AACA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEO,MAAAA,YAAF;AAAgBU,MAAAA,QAAhB;AAA0BM,MAAAA,YAA1B;AAAwCP,MAAAA,kBAAxC;AAA4DH,MAAAA,aAA5D;AAA2ET,MAAAA,eAA3E;AAA4FD,MAAAA;AAA5F,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKH;;AAED,SAASD,eAAT,EAA0BF,OAA1B","sourcesContent":["import React, { useState } from \"react\";\nimport firebase from \"./utils/Firebase\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n    // States\n    const [shoes, setShoes] = useState([]);\n    const [searchShoe, setSearchShoe] = useState([]);\n    const [submitedShoe, setSubmitedShoe] = useState([]);\n    const [emailClient, setEmailClient] = useState('');\n    //\n\n\n    // Handle Functions\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setShoes((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }));\n    };\n\n    // Handle Email Value\n\n    function onEmailChange(e) {\n        const {name, value} = e.target;\n\n        setEmailClient({...emailClient, [name]: value});\n        console.log(emailClient)\n    }\n\n    const handleSearchChange = (e) => {\n        const { name, value } = e.target;\n        setSearchShoe((prevState) => ({\n            ...prevState,\n            [name]: value,\n        }))\n        console.log(searchShoe);\n    };\n\n    function onSubmit(e) {  // add items to the DB (admin)\n        e.preventDefault();\n            firebase\n            .firestore()\n            .collection('Tenis')\n            .add({ shoes })\n            .then(() => {\n                setShoes([]);\n            });\n    }\n\n    function searchSubmit(e) { // Add the user search item to the DB\n        e.preventDefault();\n        firebase\n            .firestore()\n            .collection('Search')\n            .add({ searchShoe })\n            .then(() => {\n                setShoes([]);\n            });\n    }\n\n    // \n\n    // \n    return (\n      <Context.Provider value={{ handleChange, onSubmit, searchSubmit, handleSearchChange, onEmailChange, setSubmitedShoe, submitedShoe }}>\n        {children}\n      </Context.Provider>\n    );\n}\n\nexport { ContextProvider, Context };\n"]},"metadata":{},"sourceType":"module"}